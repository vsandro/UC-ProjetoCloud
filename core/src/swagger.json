{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger - Core microservice documentation",
    "description": ""
  },
  "tags": [
    {
      "name": "store",
      "description": "Access to stores",
      "externalDocs": {
        "description": "",
        "url": "localhost:5000"
      }
    },
    {
      "name": "category",
      "description": "Access to categories",
      "externalDocs": {
        "description": "",
        "url": "localhost:5000"
      }
    },
    {
      "name": "collector",
      "description": "Access to collectors",
      "externalDocs": {
        "description": "",
        "url": "localhost:5000"
      }
    },
    {
      "name": "event",
      "description": "Access to events",
      "externalDocs": {
        "description": "",
        "url": "localhost:5000"
      }
    }          
  ],
  "paths": {
    "/store/": {
      "post": {
        "tags": [
          "store"
        ],
        "summary": "Create a new store",
        "description": "",
        "operationId": "createStore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]              
      }
    },
    "/store": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Returns all stores",
        "description": "",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]           
      }
    },
    "/store/{storeId}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Find store by ID",
        "description": "",
        "operationId": "getStoreById",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of store that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Store not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]           
      },
      "put": {
        "tags": [
          "store"
        ],
        "summary": "Update store",
        "description": "",
        "operationId": "updateStore",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of store that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]           
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Delete store by ID",
        "description": "",
        "operationId": "deleteStore",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of the store that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Store not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]           
      }
    },
    "/category/": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Create a new category",
        "description": "",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]          
      }
    },
    "/category": {
      "get": {
        "tags": [
          "category"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Returns all categories",
        "description": "",
        "operationId": "getCategory",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }       
      }
    },
    "/category/{categoryId}": {
      "get": {
        "tags": [
          "category"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Find category by ID",
        "description": "",
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          }         
        }
      },
      "put": {
        "tags": [
          "category"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Update category",
        "description": "",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update category",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }         
        }
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete category by ID",
        "description": "",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of the category that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]          
      }
    },
    "/collector/": {
      "post": {
        "tags": [
          "collector"
        ],
        "summary": "Create a new collector",
        "description": "",
        "operationId": "createCollector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collector"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Collector"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Collector"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collector"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]          
      }
    },
    "/collector": {
      "get": {
        "tags": [
          "collector"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Returns all collectors",
        "description": "",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }      
      }
    },
    "/collector/{collectorId}": {
      "get": {
        "tags": [
          "collector"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Find collector by ID",
        "description": "",
        "operationId": "getCollectorById",
        "parameters": [
          {
            "name": "collectorId",
            "in": "path",
            "description": "ID of collector that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collector"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Collector"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Collector not found"
          },
          "security": [
            {
              "api_key": []
            }
          ]            
        }
      },
      "put": {
        "tags": [
          "collector"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Update collector",
        "description": "",
        "operationId": "updateCollector",
        "parameters": [
          {
            "name": "collectorId",
            "in": "path",
            "description": "ID of collector that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update collector",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collector"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Collector"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Collector"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },      
      "delete": {
        "tags": [
          "collector"
        ],  
        "summary": "Delete collector by ID",
        "description": "",
        "operationId": "deleteCollector",
        "parameters": [
          {
            "name": "collectorId",
            "in": "path",
            "description": "ID of the collector that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Store not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]          
      }
    },
    "/collector/distritos": {
      "get": {
        "tags": [
          "collector"
        ],
        "summary": "Returns all distritos",
        "description": "",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]          
      }
    },
    "/event/": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "Create a new event",
        "description": "",
        "operationId": "createEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]          
      }
    },
    "/event": {
      "get": {
        "tags": [
          "event"
        ],
        "summary": "Returns all events",
        "description": "",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]          
      }
    },
    "/event/{eventId}": {
      "/event/": {
        "post": {
          "tags": [
            "event"
          ],
          "summary": "Create a new event",
          "description": "",
          "operationId": "createEvent",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            },
            "405": {
              "description": "Invalid input"
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]            
        }
      },
      "/event": {
        "event": {
          "tags": [
            "event"
          ],
          "summary": "Returns all events",
          "description": "",
          "operationId": "getInventory",
          "responses": {
            "200": {
              "description": "successful operation"
            }
          }
        }
      },  
      "get": {
        "tags": [
          "event"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Find event by ID",
        "description": "",
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of event that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "event not found"
          },
          "security": [
            {
              "api_key": []
            }
          ]            
        }
      },
      "put": {
        "tags": [
          "event"
        ],
        "security": [
          {
            "api_key": []
          }
        ],         
        "summary": "Update event",
        "description": "",
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of event that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update event",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }      
        }
      },
      "delete": {
        "tags": [
          "event"
        ],
        "security": [
          {
            "api_key": []
          }
        ],          
        "summary": "Delete event by ID",
        "description": "",
        "operationId": "deleteStore",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of the event that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "event not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Store": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "store #1"
          },
          "address": {
            "type": "string",
            "example": "address #1"
          },          
          "latitude": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "longitude": {
            "type": "integer",
            "format": "int32",
            "example": 20
          }
        },
        "xml": {
          "name": "store"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "category #1"
          },
          "active": {
            "type": "boolean",
            "example": true
          }          
        },
        "xml": {
          "name": "category"
        }
      },
      "Collector": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "store #1"
          },
          "address": {
            "type": "string",
            "example": "address #1"
          },          
          "latitude": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "longitude": {
            "type": "integer",
            "format": "int32",
            "example": 20
          },
          "status": {
            "type": "string",
            "example": "A"
          }         
        },
        "xml": {
          "name": "store"
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "event #1"
          },
          "active": {
            "type": "boolean",
            "example": true
          }          
        },
        "xml": {
          "name": "event"
        }
      }
    },
    "requestBodies": {
      "Store": {
        "description": "store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Store"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Store"
            }
          }
        }
      },
      "Category": {
        "description": "category",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      }, 
      "Collector": {
        "description": "collector",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Collector"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Collector"
            }
          }
        }
      }, 
      "Event": {
        "description": "event",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },                  
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }    
  }
}